#include "Link.h"


Link::Link()
{
}

unsigned int Link::GetLength(){ return length; };// возвращает длину массива

void Link::Push(int value)//добавление элемента в конец
{

}
void Link::Shift(int value)//(добавление элемента в начало 
{

}
void Link::Pop()// удаление  последний
{

}
void Link::Unshift()// удаление первого элемента
{

}
bool Link::Remove(int index)//удаление элемента из массива по указанному индексу
{

}
bool Link::Remove(Link &)//удаление элемента из массива 
{

}
void Link::Insert(int index, int value)// вставка
{

}
void Link::Clear()//очистка массива
{

}
void Link::Reverse()
{

}
void Link::Shuffle()// (случайное перемешивание элементов массива)
{

}
void Link::Sort()//сортировка массива
{

}
void Link::Print()const
{

}
const Link* Link::GetElem(int index)const
{

}
void Link::SetElem(int, Link*)
{

}
void Link::Sort()//организовать not work 
{

}
bool Link::findLink()
{

}
bool Link::operator==(Link &l)const
{

}
Link& Link::operator[](unsigned int index)const
{

}
ostream &operator<<(std::ostream&, Link&)
{

}
Link::~Link()
{
}
